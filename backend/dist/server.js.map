{"version":3,"file":"server.js","sources":["../src/models.js","../src/init.js","../src/index.js"],"sourcesContent":["\"use strict\";\r\n\r\nimport {Document} from 'camo';\r\nimport config from './config.json';\r\n\r\nexport class User extends Document {\r\n    constructor() {\r\n        super();\r\n        this.username = {type: String, required: true, index: {unique: true}};\r\n        this.password = {type: String, required: true};\r\n        this.admin = {type: Boolean, default: false};\r\n    }\r\n}\r\n\r\n\r\nexport class Credential extends Document {\r\n    constructor() {\r\n        super();\r\n        this.category_id = {type: String, required: true};\r\n        this.owner = {type: String, required: true};\r\n        this.location = {type: String, required: true};\r\n        this.description = String;\r\n        this.username = String;\r\n        this.password = {type: String, required: true};\r\n    }\r\n}\r\n\r\n\r\nexport class Category extends Document {\r\n    constructor() {\r\n        super();\r\n        this.owner = {type: String, required: true};\r\n        this.name = {type: String, required: true};\r\n    }\r\n\r\n    static collectionName() {\r\n        return 'Categories';\r\n    }\r\n}\r\n\r\n\r\nexport class RegisterToken extends Document {\r\n    constructor() {\r\n        super();\r\n        this.created = {type: Date, required: true}\r\n    }\r\n\r\n    isValid() {\r\n        const timeDiff = Math.abs(new Date().getTime() - this.created);\r\n        const days = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n        return days <= config.registerTokenMaxAgeInDays;\r\n    }\r\n}\r\n","\"use strict\";\r\n\r\nimport { User, RegisterToken } from './models';\r\nimport config from './config.json';\r\n\r\nimport { connect } from 'camo';\r\nimport events from 'events';\r\nevents.EventEmitter.defaultMaxListeners = Infinity; // To \"fix\" MaxListenersExceededWarning\r\nprocess.setMaxListeners(Infinity);\r\nprocess.on('exit', () => console.log(\"Closing MyPass server...\"));\r\n\r\nasync function checkFirstStart() {\r\n    if (await User.count() !== 0) {\r\n        return;\r\n    }\r\n\r\n    let token = await RegisterToken.findOne();\r\n    if (!token) {\r\n        token = RegisterToken.create({created: new Date()});\r\n        await token.save();\r\n    }\r\n    console.log(`No users were detected in the database.\\nVisit localhost:${config.port}/register?token=${token._id}`);\r\n}\r\n\r\nexport default async function init(app) {\r\n    if (!config.secret) {\r\n        console.log(\"Please configure a secret\");\r\n        process.exit();\r\n    }\r\n\r\n    try {\r\n        await connect(config.connectionString);\r\n    }\r\n    catch (err) {\r\n        console.log(`Could not connect to database using: ${config.connectionString}`);\r\n        process.exit();\r\n    }\r\n\r\n    try {\r\n        await app.listen(config.port);\r\n        console.log(`Server listening on port ${config.port}`);\r\n    }\r\n    catch (err) {\r\n        console.log(`Unable to listen on port: ${config.port}`);\r\n        process.exit();\r\n    }\r\n\r\n    await checkFirstStart();\r\n}\r\n\r\n","\"use strict\";\r\n\r\nconsole.log(\"Starting MyPass...\");\r\n\r\nimport fs from 'fs';\r\nimport express from 'express';\r\nimport session from 'express-session';\r\nimport formidable from 'express-formidable';\r\nimport csurf from 'csurf';\r\nimport bcryptjs from 'bcryptjs';\r\n\r\nimport {User, Credential, Category, RegisterToken} from './models';\r\nimport init from './init';\r\nimport config from './config.json';\r\n\r\nconst app = express();\r\n\r\napp.use(express.static(__dirname + \"../../material-frontend/dist\")); // TODO remove when done testing\r\napp.use(formidable());\r\napp.use(session({\r\n    secret: config.secret,\r\n    resave: false,\r\n    saveUninitialized: false,\r\n    cookie: {\r\n        maxAge: config.sessionLengthInMinutes * 60000, // minutes to milliseconds\r\n        sameSite: \"strict\"\r\n    }\r\n}));\r\napp.use(csurf());\r\n\r\nfunction auth(req, res, next) {\r\n    if (req.session && req.session.userId) return next();\r\n    else return res.sendStatus(401);\r\n}\r\n\r\nasync function getUserData(userId) {\r\n    const categories = await Category.find({owner: userId});\r\n    return categories.map(async category => {\r\n        return {\r\n            name: category.name,\r\n            credentials: await Credential.find({category_id: category._id, owner: userId}).map(credential => {\r\n                return {\r\n                    location: credential.location,\r\n                    description: credential.description,\r\n                    username: credential.username,\r\n                    password: credential.password\r\n                };\r\n            })\r\n\r\n        }\r\n    });\r\n}\r\n\r\nconst readFile = (path, opts = 'utf8') => {\r\n    return new Promise((res, rej) => {\r\n        fs.readFile(path, opts, (err, data) => {\r\n            if (err) rej(err);\r\n            else res(data);\r\n        })\r\n    });\r\n};\r\n\r\n\r\napp.post(\"/login\", async (req, res) => {\r\n    try {\r\n        const user = await User.findOne({username: req.fields.username});\r\n        if (user && await bcryptjs.compare(req.fields.password, user.password)) {\r\n            req.session.userId = user._id;\r\n            req.session.admin = user.admin;\r\n            res.json({status: \"OK\"});\r\n        }\r\n        else {\r\n            res.sendStatus(401);\r\n        }\r\n    }\r\n    catch (err) {\r\n        console.log(\"login error\", err);\r\n        res.sendStatus(400);\r\n    }\r\n});\r\n\r\napp.post(\"/logout\", auth, async (req, res) => {\r\n    req.session.destroy();\r\n    res.json({status: \"OK\"});\r\n});\r\n\r\napp.post(\"/register\", async (req, res) => {\r\n    try {\r\n        const user = await User.findOne({username: req.fields.username});\r\n        if (user) {\r\n            return res.statusCode(400).send(\"taken\");\r\n        }\r\n        const rTok = await RegisterToken.findOne({_id: req.fields.token});\r\n        if (!rTok || !rTok.isValid()) {\r\n            return res.statusCode(400).send(\"invalid\");\r\n        }\r\n\r\n        const timeDiff = Math.abs(new Date().getTime() - rTok.created);\r\n        const days = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n        if (days > config.registerTokenMaxAgeInDays) {\r\n            await rTok.remove();\r\n            return res.statusCode(400).send(\"invalid\");\r\n        }\r\n\r\n        const hashed = await bcryptjs.hash(req.fields.password, config.saltRounds);\r\n        const newUser = {\r\n            username: req.fields.username,\r\n            password: hashed\r\n        };\r\n        if (await User.count() === 0) {\r\n            newUser.admin = true;\r\n        }\r\n        const userobj = User.create(newUser);\r\n        await userobj.save();\r\n        await rTok.remove();\r\n        res.sendStatus(201);\r\n    }\r\n    catch (err) {\r\n        console.log(\"register error\", err);\r\n        res.sendStatus(400);\r\n    }\r\n});\r\n\r\n\r\napp.get(\"/wordlists\", auth, async (req, res) => {\r\n    fs.readdir(`${__dirname}/public/assets/wordlist`, (err, lists) => {\r\n        if (err) {\r\n            return res.sendStatus(404);\r\n        }\r\n        lists = lists.map(l => l.replace(\".txt\", \"\"));\r\n        res.json(lists);\r\n    });\r\n});\r\n\r\napp.get(\"/user\", auth, async (req, res) => {\r\n    try {\r\n        const user = await User.findOne({_id: req.session.userId});\r\n        delete user.password;\r\n        res.json(user);\r\n    }\r\n    catch (err) {\r\n        console.log(\"user error\", err);\r\n        res.sendStatus(400);\r\n    }\r\n});\r\n\r\n\r\napp.post(\"/credential\", auth, async (req, res) => {\r\n    try {\r\n        let category = await Category.findOne({_id: req.fields.category_id, owner: req.session.userId});\r\n        if (!category) {\r\n            return res.sendStatus(400);\r\n        }\r\n\r\n        const credential = {\r\n            category_id: req.fields.category_id,\r\n            owner: req.session.userId,\r\n            location: req.fields.location,\r\n            description: req.fields.description,\r\n            username: req.fields.username,\r\n            password: req.fields.password\r\n        };\r\n\r\n        let model = Credential.create(credential);\r\n        await model.save();\r\n\r\n        res.json(credential);\r\n    }\r\n    catch (err) {\r\n        console.log(\"post credential error\", err);\r\n        res.sendStatus(400);\r\n    }\r\n});\r\n\r\napp.put(\"/credential\", auth, async (req, res) => {\r\n    try {\r\n        let existing = await Credential.count({_id: req.fields._id, owner: req.session.userId});\r\n        if (existing !== 1) {\r\n            return res.sendStatus(404);\r\n        }\r\n\r\n        let category = await Category.count({_id: req.fields.category_id, owner: req.session.userId});\r\n        if (category !== 1) {\r\n            return res.sendStatus(400);\r\n        }\r\n\r\n        const updates = {\r\n            category_id: req.fields.category_id,\r\n            location: req.fields.location,\r\n            description: req.fields.description,\r\n            username: req.fields.username,\r\n            password: req.fields.password\r\n        };\r\n\r\n        await Credential.update({_id: req.fields._id}, updates);\r\n\r\n        res.json({status: \"OK\"});\r\n    }\r\n    catch (err) {\r\n        console.log(\"put credential error\", err);\r\n        res.sendStatus(400);\r\n    }\r\n\r\n});\r\n\r\napp.delete(\"/credential\", auth, async (req, res) => {\r\n    try {\r\n        let existing = await Credential.findOne({_id: req.fields._id, owner: req.session.userId});\r\n        if (!existing) {\r\n            res.sendStatus(404);\r\n        }\r\n        await existing.remove();\r\n        res.json({status: \"OK\"});\r\n    }\r\n    catch (err) {\r\n        console.log(\"delete credential error\", err);\r\n        res.sendStatus(400);\r\n    }\r\n});\r\n\r\n\r\napp.get(\"/categories\", auth, async (req, res) => {\r\n    try {\r\n        const categories = await getUserData(req.session.userId);\r\n        res.json(categories);\r\n    }\r\n    catch (err) {\r\n        console.log(\"get categories error\", err);\r\n        res.sendStatus(400);\r\n    }\r\n});\r\n\r\napp.post(\"/category\", auth, async (req, res) => {\r\n    try {\r\n        const category = {\r\n            owner: req.session.userId,\r\n            name: req.fields.name\r\n        };\r\n\r\n        let model = Category.create(category);\r\n        await model.save();\r\n\r\n        res.json(category);\r\n    }\r\n    catch (err) {\r\n        console.log(\"post category error\", err);\r\n        res.sendStatus(400);\r\n    }\r\n});\r\n\r\napp.put(\"/category\", auth, async (req, res) => {\r\n    try {\r\n        const updates = {\r\n            name: req.fields.name\r\n        };\r\n        await Category.update({_id: req.fields._id, owner: req.session.userId}, updates);\r\n\r\n        res.json({status: \"OK\"});\r\n    }\r\n    catch (err) {\r\n        console.log(\"put category error\", err);\r\n        res.sendStatus(400);\r\n    }\r\n});\r\n\r\napp.delete(\"/category\", auth, async (req, res) => {\r\n    try {\r\n        if (!deletedCat) {\r\n            return res.sendStatus(404);\r\n        }\r\n\r\n        // Maybe don't even allow deleting category if it contains credentials, since this can be catastrophic.'\r\n        // Otherwise, at least make the Yes button red and require typing the category name in ALL CAPS first.\r\n        await Credential.remove({category_id: req.fields._id, owner: req.session.userId});\r\n        await Category.remove({_id: req.fields._id, owner: req.session.userId});\r\n\r\n        res.json({status: \"OK\"});\r\n    }\r\n    catch (err) {\r\n        console.log(\"delete category error\", err);\r\n        res.sendStatus(400);\r\n    }\r\n});\r\n\r\n\r\napp.get(\"/registertoken\", auth, async (req, res) => {\r\n    try {\r\n        if (!req.session.admin) {\r\n            return res.sendStatus(401);\r\n        }\r\n\r\n        let token = RegisterToken.create({created: new Date()});\r\n\r\n        await token.save();\r\n\r\n        res.json({_id: token._id, created: token.created});\r\n    }\r\n    catch (err) {\r\n        console.log(\"get register token error\", err);\r\n        res.sendStatus(400);\r\n    }\r\n});\r\n\r\n\r\napp.get(\"/export\", auth, async (req, res) => {\r\n    try {\r\n        const categories = await getUserData(req.session.userId);\r\n        const formattedDate = new Date().toISOString().substring(0, 19).replace(/:/g, \".\");\r\n\r\n        res.setHeader(\"Content-Disposition\", `attachment; filename=mypass-backup-${formattedDate}.json`);\r\n        res.json(categories);\r\n    }\r\n    catch (err) {\r\n        console.log(\"export error\", err);\r\n        res.sendStatus(400);\r\n    }\r\n});\r\n\r\napp.post(\"/import\", auth, async (req, res) => {\r\n    try {\r\n        const json = await readFile(req.files.file.path);\r\n        const categoryBackup = JSON.parse(json);\r\n\r\n        const newCats = [];\r\n        const newCreds = [];\r\n\r\n        for (const category of categoryBackup) {\r\n            for (let credential of category.credentials) {\r\n                let found = await Credential.count({_id: credential._id});\r\n                if (found === 0) {\r\n                    credential.owner = req.session.userId;\r\n                    newCreds.push(Credential.create(credential));\r\n                }\r\n            }\r\n            delete category.credentials;\r\n            category.owner = req.session.user;\r\n\r\n            let found = await Category.count({_id: category._id});\r\n            if (found === 0) {\r\n                newCats.push(Category.create(category));\r\n            }\r\n        }\r\n\r\n        await Promise.all(newCats.map(c => c.save()));\r\n        await Promise.all(newCreds.map(c => c.save()));\r\n\r\n        fs.unlink(req.files.file.path, (err) => {\r\n            console.log(err, \"deleted\")\r\n        });\r\n\r\n        res.json({status: \"OK\"});\r\n    }\r\n    catch\r\n        (err) {\r\n        console.log(\"import error\", err);\r\n        res.sendStatus(400);\r\n    }\r\n});\r\n\r\ninit(app);\r\n"],"names":["Document","connect"],"mappings":"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"}